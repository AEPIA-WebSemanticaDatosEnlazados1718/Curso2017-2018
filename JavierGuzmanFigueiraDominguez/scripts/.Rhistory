names(lapply(lost_numeric_values_count, function(x) (x == 0)))
names(lapply(lost_numeric_values_count, function(x) (x != 0)))
names(lapply(lost_numeric_values_count, function(x) (x != 0; print(x))))
names(lapply(lost_numeric_values_count, function(x) (x != 0 print(x))))
names(lapply(lost_numeric_values_count, function(x) (x != 0, print(x))))
names(lapply(lost_numeric_values_count, function(x) (return x != 0)))
names(lapply(lost_numeric_values_count, function(x) (if (x != 0) { return(x)}))
)
names(lapply(lost_numeric_values_count, function(x) (if (x != 0) { return(x)})))
names(lapply(lost_numeric_values_count, function(x) (if (x == 0) { return(x)})))
lapply(lost_numeric_values_count != 0)
lapply(lost_numeric_values_count, X != 0)
lost_numeric_values_count[!0]
subset(lost_numeric_values_count, x != 0)
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[,order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot(data_temp) + geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[,order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot(data_temp) + geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0, with = FALSE])
plot_Missing(train[,colSums(is.na(train)) > 0, with = FALSE])
colSums(sapply(train, is.na))
colSums(sapply(train[,.SD, .SDcols = cat_var], is.na))
load.libraries <- c('data.table', 'testthat', 'gridExtra', 'corrplot', 'GGally', 'ggplot2', 'e1071', 'dplyr')
install.lib <- load.libraries[!load.libraries %in% installed.packages()]
for(libs in install.lib) install.packages(libs, dependences = TRUE)
sapply(load.libraries, require, character = TRUE)
load.libraries <- c('data.table', 'testthat', 'gridExtra', 'corrplot', 'GGally', 'ggplot2', 'e1071', 'dplyr')
install.lib <- load.libraries[!load.libraries %in% installed.packages()]
for(libs in install.lib) install.packages(libs, dependences = TRUE)
sapply(load.libraries, require, character = TRUE)
load.libraries <- c('data.table', 'testthat', 'gridExtra', 'corrplot', 'GGally', 'ggplot2', 'e1071', 'dplyr')
install.lib <- load.libraries[!load.libraries %in% installed.packages()]
for(libs in install.lib) install.packages(libs, dependences = TRUE)
sapply(load.libraries, require, character = TRUE)
colSums(sapply(train[,.SD, .SDcols = cat_var], is.na))
cat_var <- names(train)[which(sapply(train, is.character))]
cat_car <- c(cat_var, 'BedroomAbvGr', 'HalfBath', ' KitchenAbvGr','BsmtFullBath', 'BsmtHalfBath', 'MSSubClass')
numeric_var <- names(train)[which(sapply(train, is.numeric))]
colSums(sapply(train, is.na))
colSums(sapply(train[,.SD, .SDcols = cat_var], is.na))
colSums(sapply(train[.SD, .SDcols = cat_var], is.na))
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[,order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot(data_temp) + geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0, with = FALSE])
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[,order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot(data_temp) + geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0, with = FALSE])
?ifelse
plot_Missing(train[,colSums(is.na(train)) > 0, with = FALSE])
plot_Missing(train[,colSums(is.na(train)) > 0])
require('ggplot2')
plot_Missing(train[,colSums(is.na(train)) > 0])
plot_Missing(train[,colSums(is.na(train)) > 0])
qplot
library('ggplot1')
library('ggplot2')
library('ggplot2')
install.packages('ggplot2')
?ggplot?
?
)
?ggplot
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[, order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot2::ggplot(data_temp) + geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing <- function(data_in, title = NULL){
plot_Missing <- function(data_in, title = NULL){{}
}
)
plot_Missing(train[,colSums(is.na(train)) > 0])
plot_Missing(train[,colSums(is.na(train)) > 0])
numeric <- names(train)[which(sapply(train, is.numeric))] # Variables numéricas
lost_numeric_values_count <- colSums(sapply(train[, numeric], is.na))
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[, order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot2::ggplot(data_temp) + ggplot2::geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
numeric <- names(train)[which(sapply(train, is.numeric))] # Variables numéricas
lost_numeric_values_count <- colSums(sapply(train[, numeric], is.na))
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[, order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot2::ggplot(data_temp) + ggplot2::geom_tile(aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0])
?aes
numeric <- names(train)[which(sapply(train, is.numeric))] # Variables numéricas
lost_numeric_values_count <- colSums(sapply(train[, numeric], is.na))
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[, order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot2::ggplot(data_temp) + ggplot2::geom_tile(ggplot2::aes(x=x, y=y, fill=factor(m))) + scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") + theme_light() + ylab("") + xlab("") + ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0])
numeric <- names(train)[which(sapply(train, is.numeric))] # Variables numéricas
lost_numeric_values_count <- colSums(sapply(train[, numeric], is.na))
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[, order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot2::ggplot(data_temp) +
ggplot2::geom_tile(ggplot2::aes(x=x, y=y, fill=factor(m))) +
ggplot2::scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") +
theme_light() +
ggplot2::ylab("") + ggplot2::xlab("") +
ggplot2::ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0])
numeric <- names(train)[which(sapply(train, is.numeric))] # Variables numéricas
lost_numeric_values_count <- colSums(sapply(train[, numeric], is.na))
plot_Missing <- function(data_in, title = NULL){
temp_df <- as.data.frame(ifelse(is.na(data_in), 0, 1))
temp_df <- temp_df[, order(colSums(temp_df))]
data_temp <- expand.grid(list(x = 1:nrow(temp_df), y = colnames(temp_df)))
data_temp$m <- as.vector(as.matrix(temp_df))
data_temp <- data.frame(x = unlist(data_temp$x), y = unlist(data_temp$y), m = unlist(data_temp$m))
ggplot2::ggplot(data_temp) +
ggplot2::geom_tile(ggplot2::aes(x=x, y=y, fill=factor(m))) +
ggplot2::scale_fill_manual(values=c("white", "black"), name="Missing\n(0=Yes, 1=No)") +
ggplot2::theme_light() +
ggplot2::ylab("") + ggplot2::xlab("") +
ggplot2::ggtitle(title)
}
plot_Missing(train[,colSums(is.na(train)) > 0])
sapply(train, is.numeric))
sapply(train, is.numeric)
-(((2/6)*log2(2/6))+((3/6)*log2(3/6))+((1/6)*log2(1/6)))
log(1)
-(((0/6)*log2(0/6))+((1/3)*log2(1/3))+((2/3)*log2(2/3)))
-(((0/3)*log2(0/3))+((1/3)*log2(1/3))+((2/3)*log2(2/3)))
((0/3)*log2(0/3))
-(((1/3)*log2(1/3))+((2/3)*log2(2/3)))
((6/16)*1.459148)+((3/16)*0.9182958)
1.5052 - 0.719361
1.19946 - 0.719361
(2*(1.19946 - 0.719361))/(1.19946+1.505241)
-(((2/4)*log2(2/4))+((2/4)*log2(2/4)))
-(((3/7)*log2(3/7))+((4/7)*log2(4/7)))
((7/16)*0.9852281)+(4/16)
(2*(1.19946 - 0.6810373))/(1.19946+1.54681)
-(((2/12)*log2(2/12))+((9/12)*log2(9/12))+((1/12)*log2(1/12)))
-(((2/4)*log2(2/4))+((2/4)*log2(2/4)))
(5/16)+((12/16)*1.040852)
(5/16)+((12/16)*1.040852)
-(((3/4)*log2(3/4))+((1/4)*log2(1/4)))
-(((3/5)*log2(3/5))+((2/5)*log2(2/5)))
-(((1/7)*log2(1/7))+((2/7)*log2(2/7))+((3/7)*log2(3/7)))
((4/16)*0.8112781)+((5/16)*0.9709506)+((7/16)*1.44132)
-(((3/4)*log2(3/4))+((1/4)*log2(1/4)))
(12/16)+((4/16)*0.8112781)
((12/16)*1)+((4/16)*0.8112781)
-(((4/12)*log2(4/12))+((4/12)*log2(4/12))+((4/12)*log2(4/12)))
((12/16)*1.584963)+((4/16)*0.8112781)
(2*(1.19946 - 1.093139))/(1.19946+0.8112781)
(2 * (1.505241 - 1.136819))/(1.505241+1.54618)
(2 * (1.505241 - 0.9528195))/(1.505241+0.8112781)
(2 * (1.54618 - 1.391542))/(1.54618+0.8112781)
0.176+0.075 + (0.5* 0.2414757)
0.176+0.075+0.07036 + (0.5* (0.2414757+0.3550108+0.3775468))
0.176+0.075 - (0.5* 0.2414757)
knit_with_parameters('~/MasterUIMP/Practicas/no_supervisados/clutering_r/Práctica-R-Clustering.Rmd')
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.which("pdflatex")
install.packages("kerlab")
install.packages("kernlab")
library(kernlab)
rnorm2 <− function(n, mean, sd) {mean + sd ∗ scale(rnorm(n)) }
r <- rnorm2(5, 940, 114.0175)
r
r
p <- (1097.5541, 923.5470, 989.5725, 788.6708, 900.6556)
p <- (1097.5541, 923.5470, 989.5725, 788.6708, 900.6556)
p <- c(1097.5541, 923.5470, 989.5725, 788.6708, 900.6556)
p
mean(p)
sd(p)
var(p)
?mse
?mae
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/cento/Documents/MasterUIMP/Practicas/supervisados/kobe-bryant-shot-selection")
resamples.result <- caret::resamples(list(glm = modelGLM.custom, fda = modelFDA.custom))
log2(2)
log2(3)
log2(4)
log2(5)
log2(6)
log2(100)
log(100, base = exp(2))
log(100, base = 2)
log((1/0.3), base = 3)
log((1/0.1), base = 3)
log((1/0.125), base = 2)
log((1/0.0625), base = 2)
log((1/0.2), base = 2)
log((1/0.3), base = 2)
log((1/0.3), base = 3)
log((1/0.3), base = exp(3))
log((1/0.3), base = 3)
log((1/0.1), base = 3)
log((1/0.1), base = 4)
log((1/0.3), base = 4)
log2(0.75)/log2(0.3)
log2(0.75/0.3)
log2(0.25/0.3)
log2(0.25)/log2(0.3)
log2(1/0.25)
log(4/0.3, base = )3
log(4/0.3, base = 3)
log(3/0.3, base = 4)
log(1/0.3, base = 4)
log(1/0.3, base = 3)
log2(1)
log(1/2)
ln(1/2)
log10(1/2)
0.75^2
0.75^1
0.75^3
0.75^4
0.75^5
0.75^7
0.75^8
0.75^9
0.5^2
0.5^3
log(3/0.3, base = 4)
log(3/0.1, base = 4)
log10(3/0.1)
log(0.5)/log(0.25)
log(0.5)/log(0.75)
log(0.5)/log(0.125)
log2(0.5)/log2(0.125)
log10(0.5)/log10(0.125)
log10(0.5/0.125)
log10(0.5/0.875)
log10(0.5/(0.875*2))
log10(0.5/(0.875*2))
log10(0.5/(0.125*2))
log10(1/(0.125*2))
log10(1/(0.125))
log(1/(0.125))
log2(1/(0.125))
log2(3/0.3)
log(3/0.3)
log(1/0.3, base = 3/4)
log(1/0.3, base = 4/3)
log(1/0.3, base = 4)
log(1/0.3, base = 3)
log2(1/2)/log2(3)
log2(1/2)/log2(0.125)
log(1/2)/log(0.125)
log2(1/0.125)
log(1/0.3, base = 3/4)
log(1/0.3, base = 4/3)
log(1/0.3, base = 4)
log(130.3, base = 4)
log(3/0.3, base = 4)
log(1/2)
log2(1)
log10(1/2)
log10(2)
log(2)
log2(0)
log2(1)
log2(0.2)
log2(0.5)
log(0.5)/log(1.125)
(1/2)*(1/2)
(3/4)*(3/4)
(3/4)*(3/4)*(3/4)
(3/4)*(3/4)*(3/4)*(3/4)
(3/4)*(3/4)*(3/4)*(3/4)*(3/4)
(1/4)*(1/4)*(1/4)*(1/4)*(1/4)
(1/4)*(1/4)*(1/4)*(1/4)
(1/4)*(1/4)*(1/4)
(1/4)
(3/4)^5
(3/4)^4
(3/4)^5
log(3/0.3)
log2(3/0.3)
log(3/(0.3*4))
log(3/0.3, base = 4)
log(3/0.3, base = 3)
log(1/0.3, base = 3)
log(1/0.3, base = 4)
log(1/0.3, base = 3/4)
log(1/0.3, base = 4/3)
log2(1/0.25)
log2(1/0.125)
log(2/0.125)
log(2/(2*0.125))
log2(1)
log2(0.5)
log(1 - 0.25)
log(1) - log(0.25)
log(0.5)/log(0.75)
log(0.5)/log(0.25)
log2(0.5)/log2(0.25)
log2(0.5)/log2(0.25)
log2(0.5)
3*log2(0.125)
log2(0.125)
3*log2(1 - 0.125)
3*(1 - log2(0.125))
abs(3 - 3.6)
abs(3 - 3,52142857) abs(3 - 3.6)
abs(3 - 3.52142857) abs(3 - 3.6)
abs(3 - 3.52142857) + abs(3 - 3.6)
abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) +
abs(3 - 3.63333333) + abs(4 - 3.71666667) + (4 - 4.05)
(abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) +
abs(3 - 3.63333333) + abs(4 - 3.71666667) + (4 - 4.05))/6
((3 - 3.52142857)^2 + (3 - 3.6)^2 + (3 - 2.84285714)^2 +
(3 - 3.63333333)^2 + (4 - 3.71666667)^2 + (4 - 4.05)^2)/6
(abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) +
abs(3 - 3.63333333) + abs(4 - 3.71666667) + abs(4 - 4.05))/6
(abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) + abs(3 - 3.63333333) + abs(4 - 3.71666667) + abs(4 - 4.05))/6
((3 - 3.52142857)^2 + (3 - 3.6)^2 + (3 - 2.84285714)^2 + (3 - 3.63333333)^2 + (4 - 3.71666667)^2 + (4 - 4.05)^2)/6
(3 - 3.52142857)^2
(3 - 3.52142857)^2 + (3 - 3.6)^2
(3 - 3.6)^2
0.36 + 0.6318878
0.36 + 0.2718878
((3 - 3.52142857)^2 + (3 - 3.6)^2 + (3 - 2.84285714)^2 + (3 - 3.63333333)^2 + (4 - 3.71666667)^2 + (4 - 4.05)^2)/6
(abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) + abs(3 - 3.63333333) + abs(4 - 3.71666667) + abs(4 - 4.05))/6
((3 - 3.52142857)^2 + (3 - 3.6)^2 + (3 - 2.84285714)^2 + (3 - 3.63333333)^2 + (4 - 3.71666667)^2 + (4 - 4.05)^2)/6
(abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) + abs(3 - 3.63333333) + abs(4 - 3.71666667) + abs(4 - 4.05))/6
sqrt(((3 - 3.52142857)^2 + (3 - 3.6)^2 + (3 - 2.84285714)^2 + (3 - 3.63333333)^2 + (4 - 3.71666667)^2 + (4 - 4.05)^2)/6)
(abs(3 - 3.52142857) + abs(3 - 3.6) + abs(3 - 2.84285714) + abs(3 - 3.63333333) + abs(4 - 3.71666667) + abs(4 - 4.05))/6
sqrt(((3 - 3.52142857)^2 + (3 - 3.6)^2 + (3 - 2.84285714)^2 + (3 - 3.63333333)^2 + (4 - 3.71666667)^2 + (4 - 4.05)^2)/6)
round(0.4359798)
round(0.4359798, 2)
round(0.3742063, 2)
(abs(1 - 2) + abs(3 - 3) + abs(3 - 4) + abs(4 - 2) + abs(5 - 2) + abs(4 - 4) + abs(4 - 5) + abs(1 - 2) + abs(4 - 4) + abs(2 - 2))/10
sqrt(1.7)
((1 - 2)^2 + (3 - 3)^2 + (3 - 4)^2 + (4 - 2)^2 + (5 - 2)^2 + (4 - 4)^2 + (4 - 5)^2 + (1 - 2)^2 + (4 - 4)^2 + (2 - 2)^2)/10
sqrt(((1 - 2)^2 + (3 - 3)^2 + (3 - 4)^2 + (4 - 2)^2 + (5 - 2)^2 + (4 - 4)^2 + (4 - 5)^2 + (1 - 2)^2 + (4 - 4)^2 + (2 - 2)^2)/10)
4 + 9 + 4 + 9 + 9
sqrt((4 + 9 + 4 + 9 + 9)/10)
3/7
3/6
(2 * 0.4285714 * 0.5)/(0.4285714 + 0.5)
round(0.4285714)
round(0.4285714, 2)
(2 * round(0.4285714) * 0.5)/(0.43 + 0.5)
(2 * round(0.4285714, 2) * 0.5)/(0.43 + 0.5)
3/5
2/5
6/10
3/5
4/8
5/9
(1 + 0.5 + (1/3) + 0.5 + 0.4 + 0.6 + (3/7) + 0.5 + (5/9) + 0.6)/10
1 + 0.5 + (1/3) + 0.5 + 0.4 + 0.6 + (3/7) + 0.5 + (5/9) + 0.6
1/5
(1 + 0.5 + 0.6 + 0.5 + (5/9) + 0.6)/6
round((1 + 0.5 + 0.6 + 0.5 + (5/9) + 0.6)/6, 2)
((1 * (1/6)) + (0.5 * (1/6)) + ((1/3) * (1/6)) + (0.5 * (2/6)) + (0.4 * (2/6)) + (0.6 * (3/6)) + ((3/7) * (3/6)) + (0.5 * (4/6)) + ((5/9) * (5/6)) + (0.6 * (6/6)))/6
(1 + 0.5 + 0.6 + 0.5 + (5/9) + 0.6)/6
(1 + 0.5 + (1/3) + 0.5 + 0.4 + 0.6 + (3/7) + 0.5 + (5/9) + 0.6)/10
3/6
round((1 + 0.5 + 0.5 + 0.5 + (5/9) + 0.6)/6, 2)
15/16
log(1)
log(2)
2*(1/log(2))
3 + (2*2)
1 + (1/log(4)) + (1/log(6)) + (1/log(8)) + (1/log(9)) + (1/log(10))
1 + (1/log(2)) + (1/log(3)) + (1/log(4)) + (1/log(5)) + (1/log(6))
3.649771/5.253727
3.649771/5.253727
round(3.649771/5.253727, 2)
log(0)
log(1)
3/log(3)
3/log(2)
3/log(3)
3/log(4)
3/log1
3/log(1)
3/log(2)
1/log(2)
1/log(3)
1/log(4)
1/log(2)
3*log(2)
3*log(3)
3*log(4)
log(4)
3*log(1)
3/log2(3)
2/log2(2)
ideal <- 3 + (2/log2(3)) + (2/log2(4)) + (2/log2(5)) + (1/log2(6)) + (1/log2(7))
ideal
(2 + (3/log2(5)) + (1/log2(7)) + (2/log2(8)) + (1/log2(9)) + (2/log2(10)))/ideal
((1/log2(6)) + (1/log2(7)) + (2/log2(8)) + (2/log2(9)) + (2/log2(10)) + (3/log2(11)))/ideal
ideal2 <- 1 + (1/log(2)) + (1/log(3)) + (1/log(4)) + (1/log(5)) + (1/log(6))
dcg <- 1 + (1/log(4)) + (1/log(6)) + (1/log(8)) + (1/log(9)) + (1/log(10))
dcg/ideal2
dcg <- 1 + (1/log2(4)) + (1/log2(6)) + (1/log2(8)) + (1/log2(9)) + (1/log2(10))
ideal2 <- 1 + (1/log2(2)) + (1/log2(3)) + (1/log2(4)) + (1/log2(5)) + (1/log2(6))
dcg/ideal2
4/5
median(4, 2.5, 3.5)
mean(4, 2.5, 3.5)
median(c(4, 2.5, 3.5))
mean(c(4, 2.5, 3.5))
mean(c(3.4, 1.8, 3.7))
median(c(3.4, 1.8, 3.7))
mean(c(3.4, 5, 1.8, 4.1, 3.7, 3.3))
mean(c(4, 3.5, 3.2, 4))
setwd("~/MasterUIMP/Practicas/web_semantica/Curso2017-2018/JavierGuzmanFigueiraDominguez/data")
setwd("~/MasterUIMP/Practicas/web_semantica/Curso2017-2018/JavierGuzmanFigueiraDominguez/scripts")
setwd("~/MasterUIMP/Practicas/web_semantica/Curso2017-2018/JavierGuzmanFigueiraDominguez/scripts")
cups <- read.csv("../data/WorldCups.csv")
matches <- read.csv("../data/WorldCupMatches.csv")
players <- read.csv("../data/WorldCupPlayers.csv")
cups_matches <- merge(cups, matches, by = "Year", all = TRUE)
View(cups_matches)
nrow(subset(matches, Year = 1930))
nrow(subset(matches, Year == 1930))
View(players)
nrow(subset(matches, MatchID == 25))
nrow(subset(matches, RoundID == 323))
nrow(subset(matches, MatchID == 26))
nrow(subset(matches, MatchID == 20))
nrow(matches$MatchID)
length(matches$MatchID)
length(unique(matches$MatchID))
length(unique(cbind(matches$MatchID, matches$RoundID)))
length(unique(matches["MatchID", "matches$RoundID"]))
length(unique(matches[, c("MatchID", "matches$RoundID")]))
length(unique(matches[, c("MatchID", "RoundID")]))
nroe(unique(matches[, c("MatchID", "RoundID")]))
nrow(unique(matches[, c("MatchID", "RoundID")]))
nrow(subset(matches, MatchID == 100))
nrow(subset(matches, MatchID == 200))
nrow(subset(matches, MatchID == 50))
nrow(subset(matches, MatchID == 40))
min(matches$MatchID)
min(matches[, "MatchID"])
matches[, "MatchID"]
View(cups)
matches <- matches[1:852,]
View(matches)
min(matches$MatchID)
max(matches$MatchID)
length(matches$MatchID)
length(unique(matches$MatchID))
duplicated(matches$MatchID)
matches$MatchID[duplicated(matches$MatchID)]
length(matches$MatchID)
nrow(unique(matches[, c("MatchID", "RoundID")]))
matches2 <- matches[!duplicated(matches$MatchID), ]
nrow(matches2)
matches <- matches[!duplicated(matches$MatchID), ]
View(matches2)
is.na(players)
sum(is.na(players))
cups_matches <- merge(cups, matches, by = "Year", all = TRUE)
cups_matches_players <- merge(cups_matches, players, by = "MatchID", all = TRUE)
View(cups_matches_players)
write.csv(cups_matches_players, file = "../data/WorldCupData.csv")
